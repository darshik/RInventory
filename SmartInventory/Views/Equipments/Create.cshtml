@model SmartInventory.Equipment
<section>
<div class="container">
<div class="row">
<div class="col-md-8">
@if (TempData["Success"] != null)
{
    <div class="alert alert-success margin-bottom-30">
        <!-- SUCCESS -->
        <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
        <strong>@TempData["Success"].ToString()</strong>
    </div>
}

<div class="panel panel-default" style="border: 1px solid #ccc">
    <div class="panel-heading panel-heading-transparent">
        <h2 class="panel-title">Create New Equipment</h2>
    </div>
</div>
<div class="panel-body" style="border: 1px solid #ccc">
@using (Html.BeginForm("Create", "Equipments", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

    @Html.ValidationSummary(true, "", new {@class = "text-danger"})


    <div class="row">
        <div class="col-md-12">
            <label class=" col-md-12">Equipments</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Equipment1, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Equipment1, "", new {@class = "text-danger"})
            </div>
        </div>

    </div>

    <div class="row">
        <div class="col-md-6">
            <label class=" col-md-12">Bar Code </label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.BarCode, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.BarCode, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="col-md-6">
            <label class=" col-md-12">No of Equipments</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.NoOf, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.NoOf, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <label class="col-md-12">Room no</label>

            <div class="col-md-12">
                @Html.EditorFor(model => model.RoomNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.RoomNumber, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="col-md-6">

            @Html.LabelFor(model => model.Model, htmlAttributes: new {@class = " col-md-12"})
            <div class="col-md-12">
                @Html.EditorFor(model => model.Model, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Model, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>


    @Html.HiddenFor(model => model.ID)

    <div class="row">
        <div class="col-md-6">
            <label class="col-md-12">Purchase Date </label>

            <div class="col-md-12">
                @Html.EditorFor(model => model.PurchaseDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PurchaseDate, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="col-md-6">
            <label class="col-md-12">UNBC Code </label>

            <div class="col-md-12">
                @Html.EditorFor(model => model.UNBCCode, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.UNBCCode, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>



    <div class="row">
        <div class="col-md-6">
            <label class="col-md-12">Serial No</label>

            <div class="col-md-12">
                @Html.EditorFor(model => model.SerialNo, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SerialNo, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="col-md-6">
            @Html.LabelFor(model => model.PO, htmlAttributes: new {@class = "col-md-12"})
            <div class="col-md-12">
                @Html.EditorFor(model => model.PO, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PO, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new {@class = "col-md-12"})
            <div class="col-md-12">
                @Html.EditorFor(model => model.PurchasePrice, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PurchasePrice, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="col-md-6">
            @Html.LabelFor(model => model.TotalPrice, htmlAttributes: new {@class = "col-md-12"})
            <div class="col-md-12">
                @Html.EditorFor(model => model.TotalPrice, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.TotalPrice, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(model => model.Contact, htmlAttributes: new {@class = "col-md-12"})
            <div class="col-md-12">
                @Html.EditorFor(model => model.Contact, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Contact, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="col-md-6">
            @Html.LabelFor(model => model.Vendor, htmlAttributes: new {@class = "col-md-12"})
            <div class="col-md-12">
                @Html.EditorFor(model => model.Vendor, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Vendor, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>





    <div class="row">
        <div class="col-md-12">
            <label class=" col-md-12">Model and Brand of instrument </label>

            <div class="col-md-12">
                <textarea class="k-textbox" id="ModelBrandInfo" name="ModelBrandInfo" ></textarea>

                @*@Html.EditorFor(model => model.ModelBrandInfo, new {htmlAttributes = new {@class = "form-control"}})*@
                @Html.ValidationMessageFor(model => model.ModelBrandInfo, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-md-12">
            <label class=" col-md-12">Type of analysis done on instrument: </label>
            <div class="col-md-12">
                <textarea class="k-textbox" id="TypeOfAnalysis" name="TypeOfAnalysis"></textarea>
                @*@Html.EditorFor(model => model.TypeOfAnalysis, new {htmlAttributes = new {@class = "form-control"}})*@
                @Html.ValidationMessageFor(model => model.TypeOfAnalysis, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <label class=" col-md-12">Other potential uses of instrument: </label>
            <div class="col-md-12">
                <textarea class="k-textbox" id="PotentialUse" name="PotentialUse"></textarea>
                @*@Html.EditorFor(model => model.PotentialUse, new {htmlAttributes = new {@class = "form-control"}})*@
                @Html.ValidationMessageFor(model => model.PotentialUse, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <label class=" col-md-12">Is instrument in good repair. If not, what needs to be done to get it going? </label>
            <div class="col-md-12">
                <textarea class="k-textbox" id="IsInGoodUse" name="IsInGoodUse"></textarea>

                @*@Html.EditorFor(model => model.IsInGoodUse, new {htmlAttributes = new {@class = "form-control"}})*@
                @Html.ValidationMessageFor(model => model.IsInGoodUse, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <label class=" col-md-12">Current users of equipment (name of faculty, industries, courses): </label>
            <div class="col-md-12">
                <textarea class="k-textbox" id="CurrentUsersOfEquipment" name="CurrentUsersOfEquipment"></textarea>

                @*@Html.EditorFor(model => model.CurrentUsersOfEquipment, new {htmlAttributes = new {@class = "form-control"}})*@
                @Html.ValidationMessageFor(model => model.CurrentUsersOfEquipment, "", new {@class = "text-danger"})
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <label class=" col-md-12">Revenue (from whom and how much annually): </label>
            <div class="col-md-12">
                <textarea class="k-textbox" id="Revenue" name="Revenue"></textarea>

                @*@Html.EditorFor(model => model.Revenue, new {htmlAttributes = new {@class = "form-control"}})*@
                @Html.ValidationMessageFor(model => model.Revenue, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <label class=" col-md-12">Other useful information: </label>
            <div class="col-md-12">
                <textarea class="k-textbox" id="OtherUsefulInfo" name="OtherUsefulInfo"></textarea>

                @*@Html.EditorFor(model => model.OtherUsefulInfo, new {htmlAttributes = new {@class = "form-control"}})*@
                @Html.ValidationMessageFor(model => model.OtherUsefulInfo, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class=" col-md-12">
                <input type="submit" value="Save" class="btn btn-primary"/>

            </div>

        </div>
    </div>
    </div>
}
</div>
</div>
<div class="col-md-4">
    <div class="panel panel-default" style="border: 1px solid #ccc">
        <div class="panel-heading panel-heading-transparent">
            <h2 class="panel-title">Upload Multiple Equipments</h2>
        </div>
    </div>
    <div class="panel-body" style="border: 1px solid #ccc">

        @if (TempData["BulkDataSuccess"] != null)
        {
            <div class="alert alert-success margin-bottom-30">
                <!-- SUCCESS -->
                <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                <strong>@TempData["BulkDataSuccess"].ToString()</strong>
            </div>
        }

        @if (TempData["BulkDataError"] != null)
        {
            <div class="alert bg-danger margin-bottom-30">
                <!-- SUCCESS -->
                <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                <strong>@TempData["BulkDataError"].ToString()</strong>
            </div>
        }

        @using (Html.BeginForm("UploadBulkEquipments", "Equipments",
            FormMethod.Post, new {enctype = "multipart/form-data", @class = "content-form"}))
        {
            <div class="row">
                <div class="col-md-12">

                    <input type="file" required name="equipmentExcel" class="btn btn-primary">

                    <br/>
                    <br/> <i>Note: Only xlsx format supported</i>
                </div>
            </div>
            <br/>
            <div class="row">
                <div class="col-md-12">
                    <input type="submit" value="Upload" class="btn btn-primary"/>


                </div>
            </div>

        }
    </div>


    <br/><br/>
    <div class="panel panel-default" style="border: 1px solid #ccc">
        <div class="panel-heading panel-heading-transparent">
            <h2 class="panel-title">Import Excel Template</h2>
        </div>
    </div>
    <div class="panel-body" style="border: 1px solid #ccc">
      
            <div class="row">
                <div class="col-md-12 text-center">
                    <a href="/Template/Template.xlsx"  target="_blank" class="btn btn-info btn-lg" >Download</a>
                </div>
            </div>
        
            

        
    </div>
</div>
    </div>
</div>


</section>
<style>
    .k-textbox {
        width: 100%;
    }


</style>
